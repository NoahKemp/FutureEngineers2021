{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red16\green60\blue192;
}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;\cssrgb\c6667\c33333\c80000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import RPi.GPIO as GPIO\
from time import sleep\
import time\
import numpy as np\
from dataclasses import fields\
from math import degrees, atan2\
import smbus\
import math\
import cv2\
import imutils\
bus = smbus.SMBus(1)\
from threading import Thread\
import threading\
######################################################################\
#Magnetometer\
LIS3MDL_M_ADDRESS \'a0 \'a0 \'a0 = 0x1E\
LIS3MDL_WHO_AM_I_M \'a0 \'a0 \'a0= 0x0F\
LIS3MDL_CTRL_REG1_M \'a0 \'a0 = 0x20\
LIS3MDL_CTRL_REG2_M \'a0 \'a0 = 0x21\
LIS3MDL_CTRL_REG3_M \'a0 \'a0 = 0x22\
LIS3MDL_CTRL_REG4_M \'a0 \'a0 = 0x23\
LIS3MDL_STATUS_REG_M \'a0 \'a0 \'a0 \'a0= 0x27\
LIS3MDL_OUT_X_L_M \'a0 \'a0 \'a0 = 0x28\
LIS3MDL_OUT_X_H_M \'a0 \'a0 \'a0 = 0x29\
LIS3MDL_OUT_Y_L_M \'a0 \'a0 \'a0 = 0x2A\
LIS3MDL_OUT_Y_H_M \'a0 \'a0 \'a0 = 0x2B\
LIS3MDL_OUT_Z_L_M \'a0 \'a0 \'a0 = 0x2C\
LIS3MDL_OUT_Z_H_M \'a0 \'a0 \'a0 = 0x2D\
LIS3MDL_TEMP_OUT_L_M \'a0 \'a0 \'a0 \'a0= 0x2E\
LIS3MDL_TEMP_OUT_H_M \'a0 \'a0 \'a0 \'a0= 0x2F\
LIS3MDL_INT_CFG_M \'a0 \'a0 \'a0 = 0x30\
LIS3MDL_INT_SRC_M \'a0 \'a0 \'a0 = 0x31\
LIS3MDL_INT_THS_L_M \'a0 \'a0 = 0x32\
LIS3MDL_INT_THS_H_M \'a0 \'a0 = 0x33\
LIS3MDL_REG_CTL_1_TEMP_EN \'a0 = 0x80\
LIS3MDL_REG_CTL_2_RESET \'a0 \'a0 = 0x04\
# mag_scale defines all possible FSR's of the magnetometer:\
\
LIS3MDL_M_SCALE_4GS \'a0 \'a0 \'a0 \'a0 = 0x20 # 00: \'a04Gs\
LIS3MDL_M_SCALE_8GS \'a0 \'a0 = 0x40 # 01: \'a08Gs\
LIS3MDL_M_SCALE_12GS \'a0 \'a0 \'a0 \'a0= 0x60 # 10: \'a012Gs\
LIS3MDL_M_SCALE_16GS \'a0 \'a0 \'a0 \'a0= 0x60 # 11: \'a016Gs\
\
# mag_oder defines all possible output data rates of the magnetometer:\
LIS3MDL_M_ODR_625 \'a0 \'a0 \'a0 = 0x04 # 6.25 Hz\
LIS3MDL_M_ODR_125 \'a0 \'a0 \'a0 = 0x08 # 12.5 Hz\
LIS3MDL_M_ODR_25 \'a0 \'a0 \'a0 \'a0= 0x0C # 25 Hz\
LIS3MDL_M_ODR_5 \'a0 \'a0 \'a0 \'a0 = 0x10 # 50\
LIS3MDL_M_ODR_10 \'a0 \'a0 \'a0 \'a0= 0x14 # 10 Hz\
LIS3MDL_M_ODR_20 \'a0 \'a0 \'a0 \'a0= 0x14 # 20 Hz\
LIS3MDL_M_ODR_40 \'a0 \'a0 \'a0 \'a0= 0x14 # 40 Hz\
LIS3MDL_M_ODR_80 \'a0 \'a0 \'a0 \'a0= 0x14 # 80 Hz\
\
mRes = 4.0 / 32768.0 \'a0 # 4G\
SENSITIVITY_OF_MIN_SCALE = 27368.0 # (4 guass scale) * (6842 LSB/guass at 4 guass scale)\
Scale = 16\
def initialise():\
# initMag -- Sets up the magnetometer to begin reading.\
\
\'a0 \'a0 #User Register Reset Function\
\'a0 \'a0 bus.write_byte_data(LIS3MDL_M_ADDRESS, LIS3MDL_CTRL_REG2_M, LIS3MDL_REG_CTL_2_RESET)\
\'a0 \'a0 #Temperature Sensor Enabled\
\'a0 \'a0 bus.write_byte_data(LIS3MDL_M_ADDRESS, LIS3MDL_CTRL_REG1_M, LIS3MDL_REG_CTL_1_TEMP_EN )\
\'a0 \'a0 #Ultra High Performance Mode Selected for XY Axis\
\'a0 \'a0 bus.write_byte_data(LIS3MDL_M_ADDRESS, LIS3MDL_CTRL_REG1_M, 0x60)\
\'a0 \'a0 #Ultra High Performance Mode Selected for Z Axis\
\'a0 \'a0 bus.write_byte_data(LIS3MDL_M_ADDRESS, LIS3MDL_CTRL_REG4_M, 0x0C)\
\'a0 \'a0 #Output Data Rate of 80 Hz Selected\
\'a0 \'a0 bus.write_byte_data(LIS3MDL_M_ADDRESS, LIS3MDL_CTRL_REG1_M, 0x1C)\
\'a0 \'a0 #Continous Conversion Mode,4 wire interface Selected\
\'a0 \'a0 bus.write_byte_data(LIS3MDL_M_ADDRESS, LIS3MDL_CTRL_REG3_M, 0x00)\
\'a0 \'a0 # 16 guass Full Scale\
\'a0 \'a0 bus.write_byte_data(LIS3MDL_M_ADDRESS, LIS3MDL_CTRL_REG2_M, 0x60)\
\
\
\
\
#Read the magnetometer output registers.\
\
# This will read all six Magnetometer output registers.\
\
\
\
# Reading the \'a0Magnetometer X-Axis Values from the Register\
\
def readMagx():\
\'a0 \'a0 \'a0 \'a0 Mag_l = bus.read_byte_data(LIS3MDL_M_ADDRESS,LIS3MDL_OUT_X_L_M)\
\'a0 \'a0 \'a0 \'a0 Mag_h = bus.read_byte_data(LIS3MDL_M_ADDRESS,LIS3MDL_OUT_X_H_M)\
\'a0 \'a0 \'a0 \'a0 Mag_total = (Mag_l | Mag_h <<8)\
\'a0 \'a0 \'a0 \'a0 return Mag_total \'a0if Mag_total < 32768 else Mag_total - 65536\
\
\
\
# Reading the \'a0Magnetometer Y-Axis Values from the Register\
\
def readMagy():\
\'a0 \'a0 \'a0 \'a0 Mag_l = bus.read_byte_data(LIS3MDL_M_ADDRESS,LIS3MDL_OUT_Y_L_M)\
\'a0 \'a0 \'a0 \'a0 Mag_h = bus.read_byte_data(LIS3MDL_M_ADDRESS,LIS3MDL_OUT_Y_H_M)\
\'a0 \'a0 \'a0 \'a0 Mag_total = (Mag_l | Mag_h <<8)\
\'a0 \'a0 \'a0 \'a0 return Mag_total \'a0if Mag_total < 32768 else Mag_total - 65536\
\
\
\
# Reading the \'a0Magnetometer Z-Axis Values from the Register\
\
def readMagz():\
\
\'a0 \'a0 \'a0 \'a0 Mag_l = bus.read_byte_data(LIS3MDL_M_ADDRESS,LIS3MDL_OUT_Z_L_M)\
\'a0 \'a0 \'a0 \'a0 Mag_h = bus.read_byte_data(LIS3MDL_M_ADDRESS,LIS3MDL_OUT_Y_H_M)\
\'a0 \'a0 \'a0 \'a0 Mag_total = (Mag_l | Mag_h <<8)\
\'a0 \'a0 \'a0 \'a0 return Mag_total \'a0if Mag_total < 32768 else Mag_total - 65536\
\
\
def MagDataTotal():\
\
\'a0 \'a0 \'a0 \'a0 mtotal = (((readMagx()**2)+(readMagy()**2)+(readMagz()**2))**0.5)\
\'a0 \'a0 \'a0 \'a0 return mtotal\
\
#Initialising the Device.\
initialise()\
\
Period_= 0\
relay = 14\
Lord=0\
distance = 0\
GPIO.setmode(GPIO.BCM)\
GPIO.setwarnings(False)\
GPIO.setup(relay,GPIO.OUT)\
GPIO.output(relay, GPIO.LOW)\
TRIG = 6\
ECHO = 16\
GPIO.setup(TRIG, GPIO.OUT)\
GPIO.output(TRIG,0)\
GPIO.setup(ECHO,\'a0{\field{\*\fldinst{HYPERLINK "http://gpio.in/"}}{\fldrslt \cf4 \ul \ulc4 \strokec4 GPIO.IN}})\
def start():\
\'a0 \'a0 GPIO.output(relay, GPIO.HIGH)\
\
\
def stop():\
\'a0 \'a0 GPIO.output(relay,GPIO.LOW)\
\
def Mesut_Eyezil():\
\'a0 \'a0 GPIO.output(TRIG, True)\
\'a0 \'a0 time.sleep(0.1)\
\'a0 \'a0 GPIO.output(TRIG, False)\
\'a0 \'a0 start = time.time()\
\'a0 \'a0 end = time.time()\
\'a0 \'a0 while GPIO.input(ECHO) == 0:\
\
\'a0 \'a0 \'a0 \'a0 start = time.time()\
\'a0 \'a0 while GPIO.input(ECHO) == 1:\
\'a0 \'a0 \'a0 \'a0 end = time.time()\
\
\'a0 \'a0 duration = end - start\
\'a0 \'a0 distance = duration * 17150\
\'a0 \'a0 globals()["distance"] = round(distance)\
\
GPIO.setup(24, GPIO.OUT)\
\
pwm= GPIO.PWM(24,50)\
\
pwm.start(0)\
\
Greg = 7.5\
Right_Turn = 2\
Left_Turn = 10\
\
#pwm.ChangeDutyCycle(7)\
blocks = 0\
angle_red=0\
\
angle_green=0\
\
Red_Block = 0\
\
Green_Block = 0\
def See_it(image):\
\
\'a0 \'a0 #blurred_image = cv2.GaussianBlur(image,(5,5), 0)\
\
\'a0 \'a0 hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\
\
\'a0 \'a0 low_green = np.array([60,60,60])\
\
\'a0 \'a0 up_green = np.array([90,255,255])\
\
\
\
\'a0 \'a0 green_mask = cv2.inRange(hsv,low_green,up_green)\
\
\'a0 \'a0 green = cv2.bitwise_and(image,image, mask = green_mask)\
\
\
\
\'a0 \'a0 low_red = np.array([160,50,50])\
\
\'a0 \'a0 up_red = np.array([189,255,255])\
\
\'a0 \'a0 red_mask= cv2.inRange(hsv,low_red,up_red)\
\
\'a0 \'a0 red=cv2.bitwise_and(image,image,mask=red_mask)\
\
\'a0 \'a0 cnts = cv2.findContours(red_mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\
\
\'a0 \'a0 cnts = imutils.grab_contours(cnts)\
\
\'a0 \'a0 cnts2 = cv2.findContours(green_mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\
\
\'a0 \'a0 cnts2 = imutils.grab_contours(cnts2)\
\
\'a0 \'a0 for c in cnts:\
\
\'a0 \'a0 \'a0 \'a0 \'a0areaRooi = cv2.contourArea(c)\
\
\'a0 \'a0 \'a0 \'a0 \'a0if areaRooi > 500:\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0x,y,w,h = cv2.boundingRect(c)\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0cv2.rectangle(red,(x,y),(x+w,y+h), (255,0,0), 3)\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#cv2.putText(image, 'red' , (x-20,y-20), cv2FONT_HERSHEY_PLAIN, 1)\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#print("red")\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Red_Block"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Period_"]=areaRooi\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#globals()['blocks'] = 1\
\
\
\
\'a0 \'a0 for c in cnts2:\
\
\'a0 \'a0 \'a0 \'a0 \'a0areaGroen = cv2.contourArea(c)\
\
\'a0 \'a0 \'a0 \'a0 \'a0if areaGroen > 500:\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0x,y,w,h = cv2.boundingRect(c)\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0cv2.rectangle(green,(x,y),(x+w,y+h), (255,0,0), 3)\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#cv2.putText(image, 'red' , (x-20,y-20), cv2FONT_HERSHEY_PLAIN, 1)\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#print(areaRooi)\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Green_Block"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Lord"]= areaGroen\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#globals()['blocks'] = 1\
\'a0 \'a0 if Green_Block and Red_Block == 1:\
\'a0 \'a0 \'a0 \'a0 globals()['blocks'] = 2\
\'a0 \'a0 if Green_Block or Red_Block == 1:\
\'a0 \'a0 \'a0 \'a0 globals()['blocks'] = 1\
\'a0 \'a0 if Green_Block and Red_Block == 0:\
\'a0 \'a0 \'a0 \'a0 globals()['blocks'] = 0\
\
\
\
\'a0 \'a0 result = (green + red)\
\
\'a0 \'a0 cv2.imshow('Through Ball Of Dreams',image)\
\'a0 \'a0 cv2.imshow("mask", result)\
\'a0 \'a0 cv2.waitKey(1)\
\
daniel = 0\
\
def Red_Sent():\
\'a0 \'a0 if Period_>1000:\
\'a0 \'a0 \'a0 \'a0 pwm.ChangeDutyCycle(Right_Turn)\
\'a0 \'a0 \'a0 \'a0 print("start")\
\'a0 \'a0 \'a0 \'a0 print("in life")\
\'a0 \'a0 \'a0 \'a0 print("we wait")\
\'a0 \'a0 \'a0 \'a0 print("for the good things")\
\'a0 \'a0 \'a0 \'a0 print("red seen")\
\'a0 \'a0 \'a0 \'a0 globals()["daniel"]=1\
\'a0 \'a0 else:\
\'a0 \'a0 \'a0 \'a0 pwm.ChangeDutyCycle(Greg)\
\
\
\
\
lego = 0\
\
def Green_Sent():\
\'a0 \'a0 if Lord>500:\
\'a0 \'a0 \'a0 pwm.ChangeDutyCycle(Left_Turn)\
\'a0 \'a0 \'a0 print("start")\
\'a0 \'a0 \'a0 print("in life")\
\'a0 \'a0 \'a0 print("we wait")\
\'a0 \'a0 \'a0 print("for the good things")\
\'a0 \'a0 \'a0 print("green seen")\
\'a0 \'a0 \'a0 globals()["lego"]=1\
\'a0 \'a0 else:\
\'a0 \'a0 \'a0 \'a0 pwm.ChangeDutyCycle(Greg)\
\
\
\
\
\
\
\
\
\
\
Water=0\
\
def Asian():\
\'a0 \'a0 Magx = readMagx()\
\'a0 \'a0 Magy = readMagy()\
\'a0 \'a0 Magz = readMagz()\
\'a0 \'a0 Mtotal = MagDataTotal()\
\'a0 \'a0 #print(Magx,Magy,Magz)\
\'a0 \'a0 globals()["angle"] = 180 * atan2(Magy,Magx)/math.pi\
\'a0 \'a0 if globals()["angle"] < 0:\
\'a0 \'a0 \'a0 \'a0 globals()["angle"] += 360\
\
def Moderator():\
\'a0 \'a0 Magx = readMagx()\
\'a0 \'a0 Magy = readMagy()\
\'a0 \'a0 Magz = readMagz()\
\'a0 \'a0 Mtotal = MagDataTotal()\
\'a0 \'a0 #print(Magx,Magy,Magz)\
\'a0 \'a0 globals()["angle"] = 180 * atan2(Magy,Magx)/math.pi\
\'a0 \'a0 if globals()["angle"] < 0:\
\'a0 \'a0 \'a0 \'a0 globals()["angle"] += 360\
\
\
\
while True:\
\'a0 \'a0 Mesut_Eyezil()\
\'a0 \'a0 sleep(0.1)\
\'a0 \'a0 Asian()\
\'a0 \'a0 #print(light_intensity)\
\'a0 \'a0 globals()["Straight"]= 0\
\'a0 \'a0 globals()["Right"]=0\
\'a0 \'a0 globals()["Back"]=0\
\'a0 \'a0 globals()["Left"]=0\
\'a0 \'a0 while Water == 0:\
\
\'a0 \'a0 \'a0while Straight ==0:\
\'a0 \'a0 \'a0 \'a0 \'a0Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0if distance < 8:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Straight"]= angle\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if 345<Straight<360:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Straight=3\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(Straight)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print("Straight")\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0sleep(2)\
\
\'a0 \'a0 \'a0while Right==0:\
\'a0 \'a0 \'a0 \'a0 \'a0Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0if distance < 8:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Right"]=angle\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if 345<Right<360:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Right=3\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(Right)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print('Right')\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0sleep(2)\
\'a0 \'a0 \'a0while Back==0:\
\'a0 \'a0 \'a0 \'a0 \'a0Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0if distance < 8:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Back"]=angle\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if 345<Back<360:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Back=3\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(Back)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print('Back')\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0sleep(2)\
\'a0 \'a0 \'a0while Left==0:\
\'a0 \'a0 \'a0 \'a0 \'a0Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0if distance < 8:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Left"]=angle\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if 345<Left<360:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Left=3\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(Left)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print('Left')\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0original = distance\
\'a0 \'a0 \'a0sleep(2)\
\'a0 \'a0 \'a0print('Sibu')\
\'a0 \'a0 \'a0globals()["Water"] += 1\
\'a0 \'a0 \'a0sleep(10)\
\'a0 \'a0 \'a0break\
\'a0 \'a0 break\
Water = 1\
cap = cv2.VideoCapture(0)\
cap.set(3,320)\
cap.set(4,240)\
\
def work_please():\
\'a0 \'a0 #while True:\
\'a0 \'a0 ret,image = cap.read()\
\'a0 \'a0 image = imutils.rotate(image, 270)\
\'a0 \'a0 See_it(image)\
def Red_Straight():\
\'a0 \'a0 \'a0globals()["Swan"]=0\
\'a0 \'a0 \'a0globals()["blocks"]=0\
\'a0 \'a0 \'a0globals()["amen"]=0\
\'a0 \'a0 \'a0globals()["Period_"]=0\
\'a0 \'a0 \'a0globals()["Lord"]=0\
\'a0 \'a0 \'a0print('Please Lord')\
\'a0 \'a0 \'a0print('In the name of Jesus')\
\'a0 \'a0 \'a0print('amen')\
\'a0 \'a0 \'a0globals()["lincoln"]=0\
\'a0 \'a0 \'a0globals()["lego"]=0\
\'a0 \'a0 \'a0globals()["Shell"]=1\
\
DapOnItWagwan=0\
def Turn_Asseblief():\
\'a0 \'a0 \'a0#print("angle", angle\
\'a0 \'a0 \'a0#print("right", Right)\
\'a0 \'a0 \'a0Moderator()\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0pwm.ChangeDutyCycle(Right_Turn)\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0print(angle)\
\'a0 \'a0 \'a0if (Back-21)< angle <(Back+13):\
\'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg+0.8)\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(1)\
\'a0 \'a0 \'a0 \'a0 \'a0Mtha = 0\
\'a0 \'a0 \'a0 \'a0 \'a0Zyi = 2\
\'a0 \'a0 \'a0 \'a0 \'a0Robin=0\
\'a0 \'a0 \'a0 \'a0 \'a0globals()["DapOnItWagwan"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0Shell=0\
def Turn_Nicely():\
\'a0 \'a0 \'a0#print("angle", angle\
\'a0 \'a0 \'a0#print("right", Right)\
\'a0 \'a0 \'a0Moderator()\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0pwm.ChangeDutyCycle(Right_Turn)\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0print(angle)\
\'a0 \'a0 \'a0if (Left-11)< angle <(Left+11):\
\'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg+2.5)\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.7)\
\'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg-0.4)\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.7)\
\'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg)\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(1)\
\'a0 \'a0 \'a0 \'a0 \'a0Mtha = 0\
\'a0 \'a0 \'a0 \'a0 \'a0Zyi = 2\
\'a0 \'a0 \'a0 \'a0 \'a0Robin=0\
\'a0 \'a0 \'a0 \'a0 \'a0globals()["DapOnItWagwan"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0Shell=0\
\
def Turn_Zhu():\
\'a0 \'a0 \'a0#print("angle", angle\
\'a0 \'a0 \'a0#print("right", Right)\
\'a0 \'a0 \'a0Moderator()\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0pwm.ChangeDutyCycle(Right_Turn)\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0print(angle)\
\'a0 \'a0 \'a0if (Straight-15)< angle <(Straight+13):\
\'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg)\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.3)\
\'a0 \'a0 \'a0 \'a0 \'a0globals()["Mtha"] = 0\
\'a0 \'a0 \'a0 \'a0 \'a0Zyi = 0\
\'a0 \'a0 \'a0 \'a0 \'a0Robin=0\
\'a0 \'a0 \'a0 \'a0 \'a0globals()["DapOnItWagwan"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0Shell=0\
\
Collin=0\
lincoln = 1\
Shell=0\
Robin=0\
start()\
while True:\
\'a0 \'a0 #print(Period_)\
\'a0 \'a0 #threading.Thread(target = See_it(image)).start()\
\'a0 \'a0 Mesut_Eyezil()\
\'a0 \'a0 Asian()\
\'a0 \'a0 globals()['Zyi']=0\
\'a0 \'a0 globals()["SaySay"]=0\
\'a0 \'a0 globals()["Mtha"]=0\
\'a0 \'a0 globals()["PiTop"]=0\
\'a0 \'a0 globals()["Stance"]=0\
\'a0 \'a0 globals()["Swan"]=0\
\'a0 \'a0 globals()["amen"]=0\
\'a0 \'a0 #Right Turn Cycle\
\'a0 \'a0 while Water == 1:\
\
\'a0 \'a0 \'a0 \'a0 pwm.ChangeDutyCycle(Greg)\
\'a0 \'a0 \'a0 \'a0 work_please()\
\'a0 \'a0 \'a0 \'a0 #print("Indian")\
\'a0 \'a0 \'a0 \'a0 #print(light_intensity)\
\'a0 \'a0 \'a0 \'a0 while Zyi == 0:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 #test tomorrow\
\'a0 \'a0 \'a0 \'a0 \'a0#if Red_Block==1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#Red_Sent()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#if Red_Block==0:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 # \'a0 break\
\'a0 \'a0 \'a0 \'a0 \'a0 #if Green_Block==1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#Green_Sent()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#if Green_Block==0:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 # \'a0 break\
\'a0 \'a0 \'a0 \'a0 \'a0Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0if distance < 160:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["SaySay"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0while SaySay == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#print("angle", angle\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#print("right", Right)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Moderator()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Right_Turn)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(angle)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if (Right-15)< angle <(Right+14):\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg+0.6)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.5)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0SaySay = 0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Zyi = 1\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0 \'a0 \'a0if Zyi == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\
#Turn Red Avoid\
\'a0 \'a0 \'a0 \'a0 while Zyi == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0work_please()\
\'a0 \'a0 \'a0 \'a0 \'a0Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0if Zyi == 2:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0DapOnItWagwan=0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0 \'a0 \'a0elif amen == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0while Swan == 2:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0work_please()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Left_Turn)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Stop = 0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print('wheel')\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if (Right-10)< angle <(Right+10):\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg-0.4)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0work_please()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Red_Straight()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0work_please()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Stop = 1\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if Stop == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0 \'a0 \'a0elif distance < 125:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print("lincoln")\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(distance)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Mtha"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print('p meister')\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0while Mtha == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Turn_Asseblief()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if DapOnItWagwan == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Zyi"] = 2\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0DapOnItWagwan=0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Mtha"]=0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\
\'a0 \'a0 \'a0 \'a0 #Turn 3\
\'a0 \'a0 \'a0 \'a0 print("vanani")\
\'a0 \'a0 \'a0 \'a0 while Zyi == 2:\
\'a0 \'a0 \'a0 \'a0 #Check Red\
\'a0 \'a0 \'a0 \'a0 \'a0Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0if distance < 95:\
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["SaySay"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0while SaySay == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#print("angle", angle\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0#print("right", Right)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Moderator()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Right_Turn)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Asian()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(angle)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if (Left-11)< angle <(Left+11):\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg-4)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.4)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg+2)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.7)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0pwm.ChangeDutyCycle(Greg)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0sleep(0.5)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0SaySay = 0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Zyi"] = 3\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if Zyi == 3:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["SaySay"] = 0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\
\
\'a0 \'a0 \'a0 \'a0 #turn 4\
\'a0 \'a0 \'a0 \'a0 while Zyi == 3:\
\'a0 \'a0 \'a0 \'a0 \'a0 Mesut_Eyezil()\
\'a0 \'a0 \'a0 \'a0 \'a0 sleep(0.1)\
\'a0 \'a0 \'a0 \'a0 \'a0 if distance < 80:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print("lincoln")\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print(distance)\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["Mtha"]=1\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print('p meister')\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0while Mtha == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Turn_Zhu()\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if DapOnItWagwan == 1:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0Zyi = 0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0globals()["DapOnItWagwan"]=0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0if Zyi == 0:\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0break\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0print('Go Sleep')}